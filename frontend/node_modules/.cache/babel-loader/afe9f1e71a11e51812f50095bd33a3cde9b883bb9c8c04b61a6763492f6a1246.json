{"ast":null,"code":"var _jsxFileName = \"/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/NewEventPage.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\n\n// export async function action({request, params}) {\n//     const data = await request.formData();\n\n//     const eventData = {\n//         title: data.get('title'),\n//         image : data.get('image'),\n//         date : data.get('date'),\n//         description : data.get('description'),\n//     }\n\n//     const response = await fetch('http://localhost:8080/events', {\n//     method: 'POST',\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n\n//     if(!response.ok) {\n//         throw json({message: \"Could not save event\"}, {status: 500})\n//     }\n//      // Redirect to the /events page after successful creation\n//     return redirect('/events')\n\n// }\n\n/**\n *  The action function :: handle form submissions  actions that require data manipulation (e.g., creating, updating, or deleting resources).\n * \n * requset :: It contains information about the request, such as headers, method, and body\n * Request class from the Fetch API.\n * \n * arams object contains any route parameters defined in the route's path\n * userId with the value from the URL.\n * \n * \n * return redirect('/events') ::: programmatically navigate to a different route after the action is complete\n */\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nfunction NewEventPage() {\n    return (\n        <EventForm />\n    )\n}\n\nexport default NewEventPage;\n\n\n// export async function action({request, params}) {\n//     const data = await request.formData();\n\n//     const eventData = {\n//         title: data.get('title'),\n//         image : data.get('image'),\n//         date : data.get('date'),\n//         description : data.get('description'),\n//     }\n\n//     const response = await fetch('http://localhost:8080/events', {\n//     method: 'POST',\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n\n//     if(!response.ok) {\n//         throw json({message: \"Could not save event\"}, {status: 500})\n//     }\n//      // Redirect to the /events page after successful creation\n//     return redirect('/events')\n\n\n// }\n\n/**\n *  The action function :: handle form submissions  actions that require data manipulation (e.g., creating, updating, or deleting resources).\n * \n * requset :: It contains information about the request, such as headers, method, and body\n * Request class from the Fetch API.\n * \n * arams object contains any route parameters defined in the route's path\n * userId with the value from the URL.\n * \n * \n * return redirect('/events') ::: programmatically navigate to a different route after the action is complete\n */"],"mappings":";AACA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,SAASC,YAAYA,CAAA,EAAG;EACpB,oBACID,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB;AAACC,EAAA,GAJQL,YAAY;AAMrB,eAAeA,YAAY;;AAG3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}