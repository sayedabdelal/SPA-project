{"ast":null,"code":"var _jsxFileName = \"/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/Error.js\",\n  _s = $RefreshSig$();\nimport { useRouteError } from 'react-router-dom';\nimport MainNavigation from '../components/MainNavigation';\nimport PageContent from '../components/PageContent';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ErrorPage() {\n  _s();\n  const error = useRouteError();\n  let title = 'An error occurred!';\n  let message = 'Something went wrong!';\n  console.log;\n  if (error.status === '500') {\n    message = JSON.parse(error.data).message;\n  }\n  if (error.status === '404') {\n    title = 'Not found!';\n    message = 'Could not find resource or page.';\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageContent, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ErrorPage, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorPage;\nexport default ErrorPage;\n\n/**\n *  useRouteError ::::  used to access any error that was thrown during the data loading, rendering, or transitioning process of a route\n * \n */\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["useRouteError","MainNavigation","PageContent","jsxDEV","_jsxDEV","Fragment","_Fragment","ErrorPage","_s","error","title","message","console","log","status","JSON","parse","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/Error.js"],"sourcesContent":["import { useRouteError } from 'react-router-dom';\nimport MainNavigation from '../components/MainNavigation';\n\nimport PageContent from '../components/PageContent';\n\n\nfunction ErrorPage() {\n    const error = useRouteError();\n\n    let title = 'An error occurred!';\n    let message = 'Something went wrong!';\n    console.log\n\n    if (error.status === '500') {\n        message = JSON.parse(error.data).message;\n    }\n    if (error.status === '404') {\n        title = 'Not found!';\n        message = 'Could not find resource or page.';\n    }\n  \n    return (\n        <>\n            <MainNavigation />\n            <PageContent title={title}>\n                <p>{message}</p>\n            </PageContent>\n        </>\n    )\n}\n\nexport default ErrorPage;\n\n/**\n *  useRouteError ::::  used to access any error that was thrown during the data loading, rendering, or transitioning process of a route\n * \n */"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,cAAc,MAAM,8BAA8B;AAEzD,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGpD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,KAAK,GAAGT,aAAa,CAAC,CAAC;EAE7B,IAAIU,KAAK,GAAG,oBAAoB;EAChC,IAAIC,OAAO,GAAG,uBAAuB;EACrCC,OAAO,CAACC,GAAG;EAEX,IAAIJ,KAAK,CAACK,MAAM,KAAK,KAAK,EAAE;IACxBH,OAAO,GAAGI,IAAI,CAACC,KAAK,CAACP,KAAK,CAACQ,IAAI,CAAC,CAACN,OAAO;EAC5C;EACA,IAAIF,KAAK,CAACK,MAAM,KAAK,KAAK,EAAE;IACxBJ,KAAK,GAAG,YAAY;IACpBC,OAAO,GAAG,kCAAkC;EAChD;EAEA,oBACIP,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA,CAACH,cAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBlB,OAAA,CAACF,WAAW;MAACQ,KAAK,EAAEA,KAAM;MAAAQ,QAAA,eACtBd,OAAA;QAAAc,QAAA,EAAIP;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eAChB,CAAC;AAEX;AAACd,EAAA,CAvBQD,SAAS;EAAA,QACAP,aAAa;AAAA;AAAAuB,EAAA,GADtBhB,SAAS;AAyBlB,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AAHA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}