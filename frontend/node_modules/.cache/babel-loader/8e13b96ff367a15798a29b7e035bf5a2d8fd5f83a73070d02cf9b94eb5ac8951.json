{"ast":null,"code":"var _jsxFileName = \"/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/NewEventPage.js\";\nimport { json, redirect } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\n\n/**\n *  The action function :: handle form submissions  actions that require data manipulation (e.g., creating, updating, or deleting resources).\n * \n * requset :: It contains information about the request, such as headers, method, and body\n * Request class from the Fetch API.\n * \n * arams object contains any route parameters defined in the route's path\n * userId with the value from the URL.\n * \n * \n * return redirect('/events') ::: programmatically navigate to a different route after the action is complete\n */\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["\nimport { json, redirect } from 'react-router-dom';\n\nimport EventForm from '../components/EventForm';\n\nfunction NewEventPage() {\n  return <EventForm  method=\"post \"/>;\n}\n\nexport default NewEventPage;\n\nexport async function action({ request, params }) {\n  const data = await request.formData();\n\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  };\n\nconst response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(eventData),\n});\n\nif (response.status === 422) {\n  return response;\n\n}\n  if (!response.ok) {\n    throw json({ message: 'Could not save event.' }, { status: 500 });\n  }\n\n  return redirect('/events');\n}\n\n/**\n *  The action function :: handle form submissions  actions that require data manipulation (e.g., creating, updating, or deleting resources).\n * \n * requset :: It contains information about the request, such as headers, method, and body\n * Request class from the Fetch API.\n * \n * arams object contains any route parameters defined in the route's path\n * userId with the value from the URL.\n * \n * \n * return redirect('/events') ::: programmatically navigate to a different route after the action is complete\n */"],"mappings":";AACA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAEjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA,CAACF,SAAS;IAAEI,MAAM,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACrC;AAACC,EAAA,GAFQN,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeO,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAEH,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDlB,MAAM,EAAE,MAAM;IACdmB,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAClC,CAAC,CAAC;EAEF,IAAIM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IAC3B,OAAON,QAAQ;EAEjB;EACE,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM9B,IAAI,CAAC;MAAE+B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;EAEA,OAAO5B,QAAQ,CAAC,SAAS,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAAAU,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}