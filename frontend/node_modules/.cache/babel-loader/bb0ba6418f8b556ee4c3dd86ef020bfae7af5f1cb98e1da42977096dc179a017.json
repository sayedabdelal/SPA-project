{"ast":null,"code":"var _jsxFileName = \"/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nf;\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError : true , message: 'Could not fetch a events..'}\n    // throw new Response(JSON.stringify({message: 'Could not fetch a events.'}), {\n    //     status: 500,\n    // });\n    throw json({\n      message: 'Could not fetch a events..'\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  }\n}\n// that code excute in a browser not server  but not a react hook in that fun()\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\n// had a value transform to anther value \n\n/*\nuseLoaderData you can use it in all commponent except the compnent above in route define\nYou cannot use useLoaderData in the component that is directly used in the route definition itself.\n\njson .. easy to hangdle code staus\n\n\n\n when need load page before  the data is there and show part of a page orady\n */\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","f","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/home/sayed/Documents/ReactJs/redux/Redux-SPA/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":[" import { useLoaderData, json, defer, Await } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\nf\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  return (\n    <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        // return {isError : true , message: 'Could not fetch a events..'}\n        // throw new Response(JSON.stringify({message: 'Could not fetch a events.'}), {\n        //     status: 500,\n        // });\n        throw json(\n            {message: 'Could not fetch a events..'},\n            {\n                status: 500,\n            }\n        )\n    } else {\n        // const resData = await response.json();\n        // return resData.events;\n        return response;\n    }\n}\n// that code excute in a browser not server  but not a react hook in that fun()\nexport function loader() {\n    return defer({\n        events: loadEvents()\n    })\n}\n// had a value transform to anther value \n\n/*\nuseLoaderData you can use it in all commponent except the compnent above in route define\nYou cannot use useLoaderData in the component that is directly used in the route definition itself.\n\njson .. easy to hangdle code staus\n\n\n\n when need load page before  the data is there and show part of a page orady\n */"],"mappings":";;AAAC,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAErE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjCC,CAAC;AACD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGX,aAAa,CAAC,CAAC;EAElC,oBACEO,OAAA,CAACF,QAAQ;IAACO,QAAQ,eAAEL,OAAA;MAAGM,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACpER,OAAA,CAACJ,KAAK;MAACiB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,YAAY,iBAAKd,OAAA,CAACH,UAAU;QAACO,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACT,EAAA,CAVQD,UAAU;EAAA,QACET,aAAa;AAAA;AAAAsB,EAAA,GADzBb,UAAU;AAYnB,eAAeA,UAAU;AAEzB,eAAec,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA;IACA,MAAMzB,IAAI,CACN;MAAC0B,OAAO,EAAE;IAA4B,CAAC,EACvC;MACIC,MAAM,EAAE;IACZ,CACJ,CAAC;EACL,CAAC,MAAM;IACH;IACA;IACA,OAAOJ,QAAQ;EACnB;AACJ;AACA;AACA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACrB,OAAO3B,KAAK,CAAC;IACTS,MAAM,EAAEY,UAAU,CAAC;EACvB,CAAC,CAAC;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}